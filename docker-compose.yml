version: '3.8'

services:
  redis:
    image: redis:6.2.4
    container_name: redis
    ports:
      - 6379:6379

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "task:1:1"
      restart: always

  kafka-producer-service:
    container_name: producer-service
    image: producer-service:latest
    environment:
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:29092
    ports:
      - "8080:8080"
    restart: always

  consumer-service:
    container_name: consumer-service
    image: consumer-service:latest
    depends_on:
      - redis
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "8081:8081"
    restart: always

  logger-service:
    container_name: logger-service
    image: logger-service:latest
    environment:
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:29092
    ports:
      - "8082:8082"
    restart: always